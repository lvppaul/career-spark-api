// <auto-generated />
using System;
using CareerSpark.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CareerSpark.DataAccessLayer.Migrations
{
    [DbContext(typeof(CareerSparkDbContext))]
    [Migration("20250926153609_AddUserAttribute")]
    partial class AddUserAttribute
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Blogs__3214EC075D1ED2B1");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__CareerFi__3214EC072100DF97");

                    b.ToTable("CareerField", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerMileStone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CareerPathId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("SuggestedCourseUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__CareerMi__3214EC079DCE204B");

                    b.HasIndex("CareerPathId");

                    b.ToTable("CareerMileStone", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerPath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CareerFieldId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__CareerPa__3214EC076B8BF44D");

                    b.HasIndex("CareerFieldId");

                    b.ToTable("CareerPath", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Comments__3214EC07648A7206");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Pending");

                    b.Property<int>("SubscriptionPlanId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC0736814C31");

                    b.HasIndex("SubscriptionPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.QuestionTest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Question__3214EC0736814C31");

                    b.ToTable("QuestionTest", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("A")
                        .HasColumnType("int");

                    b.Property<int?>("C")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("E")
                        .HasColumnType("int");

                    b.Property<int?>("I")
                        .HasColumnType("int");

                    b.Property<int?>("R")
                        .HasColumnType("int");

                    b.Property<int?>("S")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Result__3214EC079E3E8609");

                    b.ToTable("Result", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC07078FA551");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.SubscriptionPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationDays")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Subscrip__3214EC079DED5C3C");

                    b.ToTable("SubscriptionPlan", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.TestAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsSelected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TestAnsw__3214EC07133EA14C");

                    b.HasIndex("QuestionId");

                    b.ToTable("TestAnswer", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.TestHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ResultId")
                        .HasColumnType("int");

                    b.Property<int>("TestAnswerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__TestHist__3214EC074884C0E8");

                    b.HasIndex("ResultId");

                    b.HasIndex("TestAnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("TestHistory", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ExpiredRefreshTokenAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("avatarUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__User__3214EC07ED5327BC");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__User__A9D10534B9E8E376")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__UserSubs__3214EC07B240E5C7");

                    b.HasIndex("PlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscription", (string)null);
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerMileStone", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.CareerPath", "CareerPath")
                        .WithMany("CareerMileStones")
                        .HasForeignKey("CareerPathId")
                        .IsRequired()
                        .HasConstraintName("FK__CareerMil__Caree__571DF1D5");

                    b.Navigation("CareerPath");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerPath", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.CareerField", "CareerField")
                        .WithMany("CareerPaths")
                        .HasForeignKey("CareerFieldId")
                        .IsRequired()
                        .HasConstraintName("FK__CareerPat__Caree__5441852A");

                    b.Navigation("CareerField");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Comment", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.Blog", "Blog")
                        .WithMany("Comments")
                        .HasForeignKey("BlogId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__BlogId__4222D4EF");

                    b.HasOne("CareerSpark.DataAccessLayer.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__UserId__412EB0B6");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Order", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany()
                        .HasForeignKey("SubscriptionPlanId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__SubscriptionPlanId");

                    b.HasOne("CareerSpark.DataAccessLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__UserId");

                    b.Navigation("SubscriptionPlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.TestAnswer", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.QuestionTest", "Question")
                        .WithMany("TestAnswers")
                        .HasForeignKey("QuestionId")
                        .IsRequired()
                        .HasConstraintName("FK__TestAnswe__Quest__48CFD27E");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.TestHistory", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.Result", "Result")
                        .WithMany("TestHistories")
                        .HasForeignKey("ResultId")
                        .IsRequired()
                        .HasConstraintName("FK__TestHisto__Resul__4E88ABD4");

                    b.HasOne("CareerSpark.DataAccessLayer.Entities.TestAnswer", "TestAnswer")
                        .WithMany("TestHistories")
                        .HasForeignKey("TestAnswerId")
                        .IsRequired()
                        .HasConstraintName("FK__TestHisto__TestA__4F7CD00D");

                    b.HasOne("CareerSpark.DataAccessLayer.Entities.User", "User")
                        .WithMany("TestHistories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__TestHisto__UserI__4D94879B");

                    b.Navigation("Result");

                    b.Navigation("TestAnswer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.User", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__User__RoleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.UserSubscription", b =>
                {
                    b.HasOne("CareerSpark.DataAccessLayer.Entities.SubscriptionPlan", "Plan")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("PlanId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSubsc__PlanI__5DCAEF64");

                    b.HasOne("CareerSpark.DataAccessLayer.Entities.User", "User")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__UserSubsc__UserI__5CD6CB2B");

                    b.Navigation("Plan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Blog", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerField", b =>
                {
                    b.Navigation("CareerPaths");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.CareerPath", b =>
                {
                    b.Navigation("CareerMileStones");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.QuestionTest", b =>
                {
                    b.Navigation("TestAnswers");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Result", b =>
                {
                    b.Navigation("TestHistories");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.SubscriptionPlan", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.TestAnswer", b =>
                {
                    b.Navigation("TestHistories");
                });

            modelBuilder.Entity("CareerSpark.DataAccessLayer.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("TestHistories");

                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
